# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  #  schedule:
  #    #0-59 0-23 1-31 1-12 0-6
  #    - cron: '0 23 * * 0'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [ubuntu-latest, ubuntu-18.04]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest cyclonedx-bom
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip freeze > requirements-frozen.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: SonarCloud Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # Additional arguments to the sonarcloud scanner
        args: # optional
        # Set the sonar.projectBaseDir analysis property
        projectBaseDir: # optional, default is .
    - name: CycloneDX Python Generate SBOM
      run: |
        cyclonedx-bom -r -i requirements-frozen.txt -o sbom-report.json
    - name: Dependency Track Upload SBOM for Vulnerability Analysis and Visualization
      uses: DependencyTrack/gh-upload-sbom@v1.0.0
      with:
        serverhostname: 'localhost'
        apikey: ${{ secrets.DEPENDENCYTRACK_APIKEY }}
        projectname: 'web_scraper_all-${{github.ref_name}}'
        projectversion: '${{github.ref_name}}'
        autocreate: 'true'
        bomfilename: 'sbom-report.json'
